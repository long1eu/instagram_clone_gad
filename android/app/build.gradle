def key = readProperties('../private/key.properties')
def localProperties = readProperties('local.properties')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "${localProperties['flutter.sdk']}/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "eu.long1.instagram_clone_gad"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode localProperties['flutter.versionCode']
        versionName localProperties['flutter.versionName']
    }

    signingConfigs {
        release {
            keyAlias key['keyAlias']
            keyPassword key['keyPassword']
            storeFile rootProject.file(key['storeFile'])
            storePassword key['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


def readProperties(path) {
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file(path)
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader ->
            localProperties.load(reader)
        }
    }

    return localProperties
}